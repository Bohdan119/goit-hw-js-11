{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\n\nexport async function searchImages(searchWord, myGallery) {\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = '43249627-6464a1b02c37cf8fbedd51288';\n\n    const params = new URLSearchParams({\n        key: API_KEY,\n        q: \"dog+cat+tiger+lion\",\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n    });\ntry {\n        const response = await fetch(`${BASE_URL}?${params}`);\n        if (!response.ok) {\n            throw new Error('Failed to fetch images');\n        }\n        return response.json();\n    } catch (error) {\n        throw new Error('Failed to fetch images');\n    }\n}\n\n\n// fetch(`${BASE_URL}?${params}`)\n//     .then(response => {\n//         if (!response.ok) {\n//             throw new Error(response.status)\n//         }\n//         console.log(\"work\");\n//         return response.json()\n//     })\n//     .then(data => console.log(data))\n//     .catch(error => console.log(\"catch\", error))\n    \n// }\n","import SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nexport function renderGallery(receivedObject) {\nconst neccesaryArray = receivedObject.hits;\nreturn neccesaryArray\n    .map(\n    ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n    }) => `\n        <li class=\"card\">\n            <div>\n                <a href=\"${largeImageURL}\">\n                    <img src=\"${webformatURL}\" alt=\"${tags}\" class=\"picture\"/>\n                </a>\n            </div>\n            <ul class='descriptions'>\n                <li class='descriptions_item'>\n                    <span>Likes</span>\n                    <span>${likes}</span>\n                </li>\n                <li class='descriptions_item'>\n                    <span>Views</span>\n                    <span>${views}</span>\n                </li>\n                <li class='descriptions_item'>\n                    <span>Comments</span>\n                    <span>${comments}</span>\n                </li>\n                <li class='descriptions_item'>\n                    <span>Downloads</span>\n                    <span>${downloads}</span>\n                </li>\n            </ul>\n        </li>`\n    )\n    .join('');\n}\n\n\n","import { searchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// import SimpleLightbox from \"simplelightbox\";\n// import \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\nconst form = document.querySelector('.main_form');\nconst myGallery = document.querySelector('.list_gallery');\n\nconst loadEl = document.querySelector('.loader');\nwindow.addEventListener('load', () => {\n    setTimeout(() => {\n        loadEl.remove();\n    }, 600)\n});\n\nform.addEventListener(\"submit\", handlerForm);\n\nasync function handlerForm(event) {\n    event.preventDefault();\n    myGallery.innerHTML = '';\n    let searchWord = event.currentTarget.elements.inputElement.value;\n\nsearchImages(searchWord)\n    .then(data => {\n    if (data.total == 0) {\n        iziToast.show({\n        title: 'Ops.',\n        titleColor: 'white',\n        message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        messageColor: 'white',\n        color: 'red',\n        position: 'topCenter',\n        timeout: '5000',\n        });\n        return 0;\n    } else {\n        myGallery.insertAdjacentHTML('beforeend', renderGallery(data));\n        book.refresh();\n        event.currentTarget.elements.inputElement.value = '';        \n    }\n    })\n    .catch(error => {\n    iziToast.show({\n        title: 'Ops.',\n        titleColor: 'white',\n        message: error,\n        messageColor: 'white',\n        color: 'red',\n        position: 'topCenter',\n        timeout: '5000',\n    });\n    })\n}\n\n\n\n\n\n"],"names":["searchImages","searchWord","myGallery","BASE_URL","API_KEY","params","response","renderGallery","receivedObject","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","loadEl","handlerForm","event","data","iziToast","error"],"mappings":"svBAKO,eAAeA,EAAaC,EAAYC,EAAW,CAE1D,MAAMC,EAAW,2BACXC,EAAU,qCAENC,EAAS,IAAI,gBAAgB,CAC/B,IAAKD,EACL,EAAG,qBACH,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EACL,GAAI,CACI,MAAME,EAAW,MAAM,MAAM,GAAGH,CAAQ,IAAIE,CAAM,EAAE,EACpD,GAAI,CAACC,EAAS,GACV,MAAM,IAAI,MAAM,wBAAwB,EAE5C,OAAOA,EAAS,MACnB,MAAe,CACZ,MAAM,IAAI,MAAM,wBAAwB,CAC3C,CACL,CCvBO,SAASC,EAAcC,EAAgB,CAE9C,OADuBA,EAAe,KAEjC,IACD,CAAC,CACG,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAU;AAAA;AAAA;AAAA,2BAGiBL,CAAa;AAAA,gCACRD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAM9BC,CAAK;AAAA;AAAA;AAAA;AAAA,4BAILC,CAAK;AAAA;AAAA;AAAA;AAAA,4BAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,4BAIRC,CAAS;AAAA;AAAA;AAAA,cAIhC,EACA,KAAK,EAAE,CACZ,CCjCA,MAAMC,EAAO,SAAS,cAAc,YAAY,EAC1Cd,EAAY,SAAS,cAAc,eAAe,EAElDe,EAAS,SAAS,cAAc,SAAS,EAC/C,OAAO,iBAAiB,OAAQ,IAAM,CAClC,WAAW,IAAM,CACbA,EAAO,OAAM,CAChB,EAAE,GAAG,CACV,CAAC,EAEDD,EAAK,iBAAiB,SAAUE,CAAW,EAE3C,eAAeA,EAAYC,EAAO,CAC9BA,EAAM,eAAc,EACpBjB,EAAU,UAAY,GACLiB,EAAM,cAAc,SAAS,aAAa,MAE/DnB,EAAuB,EAClB,KAAKoB,GAAQ,CACd,GAAIA,EAAK,OAAS,EACd,OAAAC,EAAS,KAAK,CACd,MAAO,OACP,WAAY,QACZ,QACI,2EACJ,aAAc,QACd,MAAO,MACP,SAAU,YACV,QAAS,MACjB,CAAS,EACM,EAEPnB,EAAU,mBAAmB,YAAaK,EAAca,CAAI,CAAC,EAC7D,KAAK,QAAO,EACZD,EAAM,cAAc,SAAS,aAAa,MAAQ,EAE1D,CAAK,EACA,MAAMG,GAAS,CAChBD,EAAS,KAAK,CACV,MAAO,OACP,WAAY,QACZ,QAASC,EACT,aAAc,QACd,MAAO,MACP,SAAU,YACV,QAAS,MACjB,CAAK,CACL,CAAK,CACL"}